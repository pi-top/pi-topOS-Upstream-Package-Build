name: Debian Packaging for CPython Packages from pre-built Python wheels

on:
  workflow_dispatch:
  push:
    paths:
      - ".github/workflows/wheel-deb-build.yml"
      - "wheels"
  pull_request:
    branches:
      - master

env:
  DEB_BUILD_DOCKER_IMAGE: "pitop/pi-top-os-deb-build"
  DEB_BUILD_DOCKER_TAG: "bullseye-master"
  CHANGELOG_AUTHOR_NAME: "pi-top"
  CHANGELOG_AUTHOR_EMAIL: "deb-maintainers@pi-top.com"
  PACKAGECLOUD_REPO: "experimental"
  OS: "debian"
  DISTRO: "bullseye"

jobs:
  build-debian-package:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        architecture: [{docker: "linux/arm/v7", debian: "armhf"},{docker: "linux/arm64", debian: "arm64"},{docker: "linux/amd64", debian: "all"}]
        package: ["python3-onnxruntime", "python3-dbus-fast", "python3-typing-extensions"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check wheel exists for architecture
        run: |
          echo "FOUND_WHEELS=$(ls -1 ./wheels/${{ matrix.package }}/${{ matrix.architecture.debian }} 2>/dev/null | wc -l | xargs)" >>$GITHUB_ENV

      - name: Build in ARM Docker container
        if: ${{ env.FOUND_WHEELS == 1 }}
        run: |
          ls -lR
          docker run --rm --privileged tonistiigi/binfmt --install all

          docker run -i \
            --volume ${{ github.workspace }}:${{ github.workspace }} \
            --workdir=${{ github.workspace }} \
            --platform ${{ matrix.architecture.docker }} \
            ${{ env.OS }}:${{ env.DISTRO }} \
            /bin/bash -s <<EOF
              apt-get update
              apt install -y python3-apt apt-file dpkg-dev fakeroot build-essential devscripts debhelper
              apt-file update
              apt-get install -y debhelper dh-python python3-all-dev python3-setuptools python3-pip
              pip3 install wheel2deb
              pip3 install packaging==21.3
              cd ./wheels/${{ matrix.package }}/${{ matrix.architecture.debian }}
              wheel2deb --revision ${{ github.run_number }} --verbose
              wheel2deb build --verbose
          EOF

          ls -lR

      - name: Generate artifact name
        run: |
          echo "ARTIFACT_PREFIX=$(basename -s .dsc "$(find ./wheels/${{ matrix.package }}/${{ matrix.architecture.debian }}/output -name "*.dsc")")" >> $GITHUB_ENV

      - name: Upload binary package artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_PREFIX }}.deb
          path: ./wheels/${{ matrix.package }}/${{ matrix.architecture.debian }}/output/*.deb
          if-no-files-found: error

      - name: Upload source package artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_PREFIX }}.deb-src
          path: ./wheels/${{ matrix.package }}/${{ matrix.architecture.debian }}/output/*.tar.*
          if-no-files-found: error

      - name: Upload package build metadata artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_PREFIX }}.metadata
          path: |
            ./wheels/${{ matrix.package }}/${{ matrix.architecture.debian }}/output/**
            !./wheels/${{ matrix.package }}/${{ matrix.architecture.debian }}/output/*.deb
            !./wheels/${{ matrix.package }}/${{ matrix.architecture.debian }}/output/*.tar.*
          if-no-files-found: error

      - name: Upload .dsc to PackageCloud
        uses: pi-top/ghaction-packagecloud@main
        # Only 1 .dsc is required for source so take armhf if there's multiple
        if: |
          (
            github.ref == 'refs/heads/master' &&
            (
              matrix.architecture.debian == 'amd64' ||
              matrix.architecture.debian == 'armhf'
            )

          )
        with:
          repository: ${{ env.PACKAGECLOUD_REPO }}/${{ env.OS }}/${{ env.DISTRO }}
          files: |
            ./wheels/${{ matrix.package }}/${{ matrix.architecture.debian }}/output/*.dsc
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}

      - name: Upload .deb to PackageCloud
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: pi-top/ghaction-packagecloud@main
        with:
          repository: ${{ env.PACKAGECLOUD_REPO }}/${{ env.OS }}/${{ env.DISTRO }}
          files: |
            ./wheels/${{ matrix.package }}/${{ matrix.architecture.debian }}/output/*.deb
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
