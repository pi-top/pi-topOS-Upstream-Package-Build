name: Build debs from wheels in repo

on:
  workflow_dispatch:
  push:
    paths:
      - ".github/workflows/wheel-deb-build.yml"
      - "wheels"
  pull_request:
    branches:
      - master

env:
  PACKAGECLOUD_REPO: "experimental"
  OS: "debian"

jobs:
  build-debs-from-wheels:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        architecture: [{docker: "linux/arm/v7", debian: "armhf"},{docker: "linux/arm64", debian: "arm64"},{docker: "linux/amd64", debian: "all"}]
        package: ["python3-onnxruntime", "python3-typing-extensions", "python3-bluez-peripheral", "python3-osc", "python3-imutils"]
        distro: ["bullseye", "bookworm"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check wheel exists for architecture
        run: |
          echo "WHEEL_FILES_FOUND=$(ls -1 ./wheels/${{ matrix.package }}/${{ matrix.architecture.debian }}/${{ matrix.distro }} 2>/dev/null | wc -l | xargs)" >> "$GITHUB_ENV"

      - name: Build in ARM Docker container
        if: env.WHEEL_FILES_FOUND == '1'
        run: |
          ls -lR
          docker run --rm --privileged tonistiigi/binfmt --install all

          docker run -i \
            --volume ${{ github.workspace }}:${{ github.workspace }} \
            --workdir=${{ github.workspace }} \
            --platform ${{ matrix.architecture.docker }} \
            ${{ env.OS }}:${{ matrix.distro }} \
            /bin/bash -s <<EOF
              apt-get update
              apt install -y python3-apt apt-file dpkg-dev fakeroot build-essential devscripts debhelper
              apt-file update
              apt-get install -y debhelper dh-python python3-all-dev python3-setuptools python3-pip
              # Allow pip installing on python3.11
              rm -r /usr/lib/python3.11/EXTERNALLY-MANAGED || true
              if [[ ${{ matrix.distro }} == 'bookworm' ]]; then
                # On bookworm, install latest version of wheel2deb ; latest in pypi doesn't support python 3.11
                pip3 install wheel2deb==0 -i https://packagecloud.io/pi-top/pypi/pypi/simple --extra-index-url https://pypi.python.org/simple
              else
                pip3 install wheel2deb
              fi
              pip3 install packaging==21.3
              cd ./wheels/${{ matrix.package }}/${{ matrix.architecture.debian }}/${{ matrix.distro }}
              wheel2deb --verbose
              wheel2deb build --verbose
          EOF

          ls -l ./wheels/${{ matrix.package }}/${{ matrix.architecture.debian }}/${{ matrix.distro }}/output

      - name: Generate artifact name
        if: env.WHEEL_FILES_FOUND == '1'
        run: |
          echo "ARTIFACT_PREFIX=$(basename -s .dsc "$(find ./wheels/${{ matrix.package }}/${{ matrix.architecture.debian }}/${{ matrix.distro }}/output -name "*.dsc")")" >> $GITHUB_ENV

      - name: Upload binary package artifacts
        if: env.WHEEL_FILES_FOUND == '1'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.distro }}.deb
          path: ./wheels/${{ matrix.package }}/${{ matrix.architecture.debian }}/${{ matrix.distro }}/output/*.deb
          if-no-files-found: error

      - name: Upload source package artifacts
        if: env.WHEEL_FILES_FOUND == '1'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.distro }}.deb-src
          path: ./wheels/${{ matrix.package }}/${{ matrix.architecture.debian }}/${{ matrix.distro }}/output/*.tar.*
          if-no-files-found: error

      - name: Upload .dsc to PackageCloud
        uses: pi-top/ghaction-packagecloud@main
        # Only 1 .dsc is required for source so take armhf if there's multiple
        if: |
          (
            env.WHEEL_FILES_FOUND == '1' &&
            github.ref == 'refs/heads/master' &&
            (
              matrix.architecture.debian == 'amd64' ||
              matrix.architecture.debian == 'armhf'
            )

          )
        with:
          repository: ${{ env.PACKAGECLOUD_REPO }}/${{ env.OS }}/${{ matrix.distro }}
          files: |
            ./wheels/${{ matrix.package }}/${{ matrix.architecture.debian }}/${{ matrix.distro }}/output/*.dsc
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}

      - name: Upload .deb to PackageCloud
        if: github.ref == 'refs/heads/master' && env.WHEEL_FILES_FOUND == '1'
        uses: pi-top/ghaction-packagecloud@main
        with:
          repository: ${{ env.PACKAGECLOUD_REPO }}/${{ env.OS }}/${{ matrix.distro }}
          files: |
            ./wheels/${{ matrix.package }}/${{ matrix.architecture.debian }}/${{ matrix.distro }}/output/*.deb
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
