name: Debian Packaging for CPython Packages from pre-built Python wheels

on: workflow_dispatch

env:
  DEB_BUILD_DOCKER_IMAGE: "pitop/pi-top-os-deb-build"
  DEB_BUILD_DOCKER_TAG: "bullseye-master"
  CHANGELOG_AUTHOR_NAME: "pi-top"
  CHANGELOG_AUTHOR_EMAIL: "deb-maintainers@pi-top.com"
  PACKAGECLOUD_REPO: "experimental"
  OS: "debian"
  DISTRO: "bullseye"
  ARCH: "linux/arm/v7"

jobs:
  build-debian-package:
    runs-on: ubuntu-20.04
    steps:
      # Checkout, only keep onnxruntime
      - name: Checkout code
        uses: actions/checkout@v2.3.4

      - name: Build in ARM Docker container
        run: |
          ls -lR
          docker run --rm --privileged tonistiigi/binfmt --install all

          docker run -i \
            --volume ${{ github.workspace }}:${{ github.workspace }} \
            --workdir=${{ github.workspace }} \
            --platform ${{ env.ARCH }} \
            ${{ env.OS }}:${{ env.DISTRO }} \
            /bin/bash -s <<EOF
              apt-get update
              apt install -y python3-apt apt-file dpkg-dev fakeroot build-essential devscripts debhelper
              apt-file update
              apt-get install -y debhelper dh-python python3-all-dev python3-setuptools python3-pip
              pip3 install wheel2deb
              cd ./python3-onnxruntime
              wheel2deb --verbose
              wheel2deb build --verbose
          EOF

          ls -lR

      - name: Generate artifact name
        run: |
          echo "ARTIFACT_PREFIX=$(basename -s .dsc "$(find ./python3-onnxruntime/output -name "*.dsc")")" >> $GITHUB_ENV

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT_PREFIX }}.deb
          path: ./python3-onnxruntime/output/*.deb

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT_PREFIX }}.deb-src
          path: ./python3-onnxruntime/output/*.tar.*

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT_PREFIX }}.metadata
          path: |
            ./python3-onnxruntime/output/**
            !./python3-onnxruntime/output/*.deb
            !./python3-onnxruntime/output/*.tar.*

      # Upload experimental build
      # debs
      - uses: docker://lpenz/ghaction-packagecloud:v0.3
        with:
          repository: ${{ env.PACKAGECLOUD_REPO }}/${{ env.OS }}/${{ env.DISTRO }}
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}

      # dsc
      - uses: docker://lpenz/ghaction-packagecloud:v0.3
        with:
          repository: ${{ env.PACKAGECLOUD_REPO }}/${{ env.OS }}/${{ env.DISTRO }}
          files: ./artifacts/${{ env.ARTIFACT_PREFIX }}.dsc
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
