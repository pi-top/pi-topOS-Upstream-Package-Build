name: Debian Packaging for Python Packages from PyPI

on: workflow_dispatch

env:
  DEB_BUILD_DOCKER_IMAGE: "pitop/pi-top-os-deb-build"
  DEB_BUILD_DOCKER_TAG: "bullseye-master"
  CHANGELOG_AUTHOR_NAME: "pi-top"
  CHANGELOG_AUTHOR_EMAIL: "deb-maintainers@pi-top.com"
  PACKAGECLOUD_REPO: "experimental"
  OS: "debian"
  DISTRO: "bullseye"
  DOCKER_ARCH: "linux/arm/v7"

jobs:
  build-debian-package:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        package: ["imutils"]
        # sdist_dsc_options:
        #     https://github.com/astraw/stdeb#stdeb-distutils-command-options
        #     https://github.com/astraw/stdeb#stdebcfg-configuration-file
        include:
          - package: "python-osc"
            sdist_dsc_options: "--package3 python3-osc"

          - package: "python-sonic"
            sdist_dsc_options: "--package3 python3-sonic --depends3 python3-osc"

          - package: "pyfestival"
            build_deps: "festival-dev"

          - package: "dlib"
            build_deps: "build-essential cmake libopenblas-dev liblapack-dev libx11-dev libgtk-3-dev"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.2.0

      - name: Build in ARM Docker container
        run: |
          docker run --rm --privileged tonistiigi/binfmt --install all

          docker run -i \
            --volume $(pwd):$(pwd) \
            --workdir=$(pwd) \
            -e BUILD_DEPENDENCIES:"${{ matrix.build_deps }}" \
            --platform ${{ env.DOCKER_ARCH }} \
            pitop/pypi-build:latest \
            python3 $(pwd)/pypi-build/scripts/pypi-build.py \
              "${{ matrix.package }}" \
              --options-str="${{ matrix.sdist_dsc_options }}"
          EOF

      - name: Generate artifact name
        run: |
          echo "ARTIFACT_PREFIX=$(basename -s .dsc "$(find . -name "*.dsc")")" >> $GITHUB_ENV

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT_PREFIX }}.deb
          path: ./artifacts/*.deb

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT_PREFIX }}.deb-src
          path: ./artifacts/*.tar.xz

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT_PREFIX }}.metadata
          path: |
            ./artifacts/**
            !./artifacts/*.deb
            !./artifacts/*.tar.xz

      # Upload experimental build
      # debs
      - uses: docker://lpenz/ghaction-packagecloud:v0.3
        with:
          repository: ${{ env.PACKAGECLOUD_REPO }}/${{ env.OS }}/${{ env.DISTRO }}
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}

      # dsc
      - uses: docker://lpenz/ghaction-packagecloud:v0.3
        with:
          repository: ${{ env.PACKAGECLOUD_REPO }}/${{ env.OS }}/${{ env.DISTRO }}
          files: ./artifacts/${{ env.ARTIFACT_PREFIX }}.dsc
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
