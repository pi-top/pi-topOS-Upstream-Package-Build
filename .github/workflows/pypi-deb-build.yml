name: Debian Packaging for Python Packages from PyPI

on:
  workflow_dispatch:
  push:
    paths:
      - ".github/workflows/pypi-deb-build.yml"
      - "pypi-build/scripts"
      - "pypi-build/patches"
  pull_request:
    branches:
      - master

env:
  DEB_BUILD_DOCKER_IMAGE: "pitop/pi-top-os-deb-build"
  DEB_BUILD_DOCKER_TAG: "bullseye-master"
  CHANGELOG_AUTHOR_NAME: "pi-top"
  CHANGELOG_AUTHOR_EMAIL: "deb-maintainers@pi-top.com"
  PACKAGECLOUD_REPO: "experimental"
  OS: "debian"
  DISTRO: "bullseye"

jobs:
  build-debian-package:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        docker_architecture:
          - "arm/v7"
          - "arm64"

        package:
          - [
              "dlib",
              "",
              "build-essential cmake libopenblas-dev liblapack-dev libx11-dev libgtk-3-dev"
            ]
          - [
              "frozenlist",
              "",
              ""
            ]
          - [
              "aiohttp",
              "--depends3 'python3-aiosignal (>= 1.1.2), python3-async-timeout (>= 4.0.0), python3-frozenlist(>= 1.1.1), python3-charset-normalizer (>= 2.0), python3-charset-normalizer (< 4), python3-multidict (>=4.5), python3-multidict(< 7), python3-yarl(>=1.0), python3-yarl (< 2), python3-typing-extensions (>= 3.7.4)'",
              ""
            ]
          
        include:
          - docker_architecture: "amd64"
            package: ["click-logging", "", ""]

          - docker_architecture: "amd64"
            package: ["imutils", "", ""]

          - docker_architecture: "amd64"
            package: ["async-timeout", "", ""]

          - docker_architecture: "amd64"
            package: ["charset-normalizer", "", ""]

          - docker_architecture: "amd64"
            package: ["python-osc", "--package3 python3-osc", ""]

          - docker_architecture: "amd64"
            package: ["python-sonic", "--package3 python3-sonic --depends3 python3-osc", ""]

          - docker_architecture: "amd64"
            package: ["aiosignal", "--depends3 'python3-frozenlist (>=1.1.0)'", ""]

          - docker_architecture: "amd64"
            package: ["smbus2", "", ""]

          - docker_architecture: "amd64"
            package: ["godirect", "--package3 python3-godirect --depends3 'python3-hidapi' --depends3 'python3-bleak'", ""]

          - docker_architecture: "amd64"
            package: ["bleak", "--package3 python3-bleak --depends3 'python3-async-timeout' --depends3 'python3-typing-extensions' --depends3 'python3-dbus-fast'", ""]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build in ARM Docker container
        run: |
          docker run --rm --privileged tonistiigi/binfmt --install all

          docker run -i \
            --volume ${{ github.workspace }}:${{ github.workspace }} \
            --workdir=${{ github.workspace }} \
            -e BUILD_DEPENDENCIES="${{ matrix.package[2] }}" \
            --platform linux/${{ matrix.docker_architecture }} \
            pitop/pypi-build:latest \
            bash -c "sudo apt update && \
            ./pypi-build/scripts/pypi-build.py ${{ matrix.package[0] }} \
              --options-str=\"${{ matrix.package[1] }} --upstream-version-suffix '+ptos3' --debian-version ${{ github.run_number }}\" "

      - name: Generate artifact name
        run: |
          echo "ARTIFACT_PREFIX=$(basename -s .dsc "$(find . -name "*.dsc")")" >> $GITHUB_ENV

      - name: Upload binary package artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_PREFIX }}.deb
          path: ./artifacts/*.deb
          if-no-files-found: error

      - name: Upload source package artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_PREFIX }}.deb-src
          path: ./artifacts/*.tar.xz
          if-no-files-found: error

      - name: Upload package build metadata artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_PREFIX }}.metadata
          path: |
            ./artifacts/**
            !./artifacts/*.deb
            !./artifacts/*.tar.xz
          if-no-files-found: error

      - name: Upload .dsc to PackageCloud
        uses: pi-top/ghaction-packagecloud@main
        # Only 1 .dsc is required for source so take armhf if there's multiple
        if: |
          (
            github.ref == 'refs/heads/master' &&
            (
              matrix.architecture == 'amd64' ||
              matrix.architecture == 'armhf'
            )
          )
        with:
          repository: ${{ env.PACKAGECLOUD_REPO }}/${{ env.OS }}/${{ env.DISTRO }}
          files: |
            ./artifacts/*.dsc
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}

      - name: Upload .deb to PackageCloud
        uses: pi-top/ghaction-packagecloud@main
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          repository: ${{ env.PACKAGECLOUD_REPO }}/${{ env.OS }}/${{ env.DISTRO }}
          files: |
            ./artifacts/*.deb
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
