name: Debian Packaging for Python Packages from PyPI

on:
  workflow_dispatch:
  push:
    paths:
      - ".github/workflows/pypi-deb-build.yml"
      - "pypi-build/scripts"
      - "pypi-build/patches"

env:
  DEB_BUILD_DOCKER_IMAGE: "pitop/pi-top-os-deb-build"
  DEB_BUILD_DOCKER_TAG: "bullseye-master"
  CHANGELOG_AUTHOR_NAME: "pi-top"
  CHANGELOG_AUTHOR_EMAIL: "deb-maintainers@pi-top.com"
  PACKAGECLOUD_REPO: "experimental"
  OS: "debian"
  DISTRO: "bullseye"
  DOCKER_ARCH: "linux/arm/v7"

jobs:
  build-debian-package:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        package: ["click-logging", "imutils"]
        # sdist_dsc_options:
        #     https://github.com/astraw/stdeb#stdeb-distutils-command-options
        #     https://github.com/astraw/stdeb#stdebcfg-configuration-file
        include:
          - package: "python-osc"
            sdist_dsc_options: "--package3 python3-osc"

          - package: "python-sonic"
            sdist_dsc_options: "--package3 python3-sonic --depends3 python3-osc"

          - package: "dlib"
            build_deps: "build-essential cmake libopenblas-dev liblapack-dev libx11-dev libgtk-3-dev"

          - package: "aiohttp"
            sdist_dsc_options: "--depends3 python3-aiosignal,python3-frozenlist,python3-charset-normalizer"

          - package: "aiosignal"
            sdist_dsc_options: "--depends3 python3-frozenlist"

          - package: "async-timeout"

          - package: "charset-normalizer"

          - package: "frozenlist"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.2.0

      - name: Build in ARM Docker container
        run: |
          docker run --rm --privileged tonistiigi/binfmt --install all

          docker run -i \
            --volume ${{ github.workspace }}:${{ github.workspace }} \
            --workdir=${{ github.workspace }} \
            -e BUILD_DEPENDENCIES="${{ matrix.build_deps }}" \
            --platform ${{ env.DOCKER_ARCH }} \
            pitop/pypi-build:latest \
            ./pypi-build/scripts/pypi-build.py ${{ matrix.package }} \
              --options-str="${{ matrix.sdist_dsc_options }} --upstream-version-suffix '+ptos3' --debian-version ${{ github.run_number }}"

      - name: Generate artifact name
        run: |
          echo "ARTIFACT_PREFIX=$(basename -s .dsc "$(find . -name "*.dsc")")" >> $GITHUB_ENV

      - name: Upload binary package artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT_PREFIX }}.deb
          path: ./artifacts/*.deb

      - name: Upload source package artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT_PREFIX }}.deb-src
          path: ./artifacts/*.tar.xz

      - name: Upload package build metadata artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT_PREFIX }}.metadata
          path: |
            ./artifacts/**
            !./artifacts/*.deb
            !./artifacts/*.tar.xz

      - uses: pi-top/ghaction-packagecloud@main
        with:
          repository: ${{ env.PACKAGECLOUD_REPO }}/${{ env.OS }}/${{ env.DISTRO }}
          files: |
            ./artifacts/*.dsc
            ./artifacts/*.deb
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
